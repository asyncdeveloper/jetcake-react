{"version":3,"sources":["images/hero-image.jpg","config/firebase.js","redux/auth/auth.actions.js","redux/auth/auth.types.js","components/common/MainNavbar.js","components/common/Footer.js","components/common/HeroImage.js","layouts/Default.js","components/HomePage.js","components/common/SpinnerButton.js","components/common/UserProfileDetails.js","components/ProfilePage.js","components/LoginPage.js","components/RegisterPage.js","routes.js","App.js","serviceWorker.js","redux/auth/auth.reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","authProgress","type","uploadImage","file","a","async","Promise","resolve","reject","uploadTask","ref","put","on","snapshot","err","getDownloadURL","then","downloadURL","MainNavbar","props","toggleNavbar","setState","collapseOpen","state","handleLogout","signOut","isLoggedIn","this","headerLinks","routes","map","item","idx","hideOnLogin","key","href","path","alias","theme","expand","onClick","open","navbar","Component","connect","auth","uid","dispatch","getState","getFirebase","catch","message","Footer","className","Date","getFullYear","style","content","HeroImage","src","require","alt","errorMessage","children","number","lg","size","offset","HomePage","fluid","SpinnerButton","outline","disabled","pill","float","UserProfileDetails","handleSubmit","e","preventDefault","updateUser","handleChange","target","id","value","handleFileChange","files","image","nextProps","prevState","user","isLoading","successMessage","isEmpty","small","maxHeight","maxWidth","imageUrl","flush","onSubmit","form","md","htmlFor","placeholder","defaultValue","address","onChange","phoneNumber","dateOfBirth","question1","question2","question3","inputprops","accept","to","compose","users","firestore","data","authError","getFirestore","userId","collection","doc","update","firestoreConnect","ProfilePage","LoginPage","signIn","email","password","credentials","signInWithEmailAndPassword","RegisterPage","signUp","required","name","exact","layout","DefaultLayout","component","newUser","createUserWithEmailAndPassword","resp","set","route","index","Boolean","window","location","hostname","match","initState","authReducer","action","rootReducer","combineReducers","firebaseReducer","firestoreReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76c6864b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero-image.7e056773.jpg\";","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/storage';\n\nexport const fbConfig = {\n  apiKey: \"AIzaSyBv7nKixLmXf2IVhbP60xFxlOFACnN6cFU\",\n  authDomain: \"jetcake-react.firebaseapp.com\",\n  databaseURL: \"https://jetcake-react.firebaseio.com\",\n  projectId: \"jetcake-react\",\n  storageBucket: \"jetcake-react.appspot.com\",\n  messagingSenderId: \"522385694241\",\n  appId: \"1:522385694241:web:88d039747fc8b02b390d60\"\n};\n\nfirebase.initializeApp(fbConfig);\n\nexport default firebase;\n\nexport const storage = firebase.storage();","import {\n    AUTH_PROGRESS,\n    SIGN_OUT_FAILURE,\n    SIGN_OUT_SUCCESS,\n    SIGNIN_FAILURE,\n    SIGNIN_SUCCESS,\n    SIGNUP_FAILURE,\n    SIGNUP_SUCCESS,\n    UPDATE_FAILURE,\n    UPDATE_SUCCESS\n} from \"./auth.types\";\nimport { storage } from \"../../config/firebase\";\n\nexport const signIn = (credentials) => {\n    return (dispatch, getState , { getFirebase }) => {\n        dispatch(authProgress());\n\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: SIGNIN_SUCCESS });\n        }).catch((err) => {\n            dispatch({ type: SIGNIN_FAILURE, message: err.message });\n        });\n    }\n};\n\nexport const authProgress = () => {\n    return ({ type: AUTH_PROGRESS });\n};\n\nexport const signOut = () => {\n    return (dispatch, getState , { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: SIGN_OUT_SUCCESS })\n        }).catch(err => {\n            dispatch({ type: SIGN_OUT_FAILURE, message: err.message });\n        });\n    }\n};\n\nexport const signUp = (newUser) => {\n    return async (dispatch, getState, {getFirebase, getFirestore}) => {\n        dispatch(authProgress());\n\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        let imageUrl = '';\n        try {\n            imageUrl = await uploadImage(newUser.image);\n\n            firebase.auth().createUserWithEmailAndPassword(\n                newUser.email,\n                newUser.password\n            ).then(resp => {\n                return firestore.collection('users').doc(resp.user.uid).set({\n                    email: newUser.email,\n                    address: newUser.address,\n                    phoneNumber: newUser.phoneNumber,\n                    dateOfBirth: newUser.dateOfBirth,\n                    question1: newUser.question1,\n                    question2: newUser.question2,\n                    question3: newUser.question3,\n                    imageUrl\n                });\n            }).then(() => {\n                dispatch({type: SIGNUP_SUCCESS});\n            }).catch((err) => {\n                dispatch({ type: SIGNUP_FAILURE, message: err.message });\n            });\n        }catch (e) {\n            dispatch({ type: SIGNUP_FAILURE, message: e.message });\n        }\n\n    }\n};\n\nexport const updateUser = (user) => {\n    return async (dispatch, getState, {getFirebase, getFirestore}) => {\n        dispatch(authProgress());\n\n        const state = getState();\n        const userId = state.firebase.auth.uid;\n\n        const firestore = getFirestore();\n\n        try {\n            let imageUrl = user.imageUrl;\n            if (user.image) {\n                imageUrl = await uploadImage(user.image);\n            }\n\n            return firestore.collection('users').doc(userId).update({\n                address: user.address,\n                phoneNumber: user.phoneNumber,\n                dateOfBirth: user.dateOfBirth,\n                question1: user.question1,\n                question2: user.question2,\n                question3: user.question3,\n                imageUrl\n            }).then(() => {\n                dispatch({ type: UPDATE_SUCCESS, message: 'Updated Successful' });\n            }) ;\n        }catch (e) {\n            dispatch({ type: UPDATE_FAILURE, message: e.message });\n        }\n    }\n};\n\nasync function uploadImage(file) {\n    return new Promise(function(resolve, reject) {\n        const storageRef = storage.ref(\"images\");\n        const uploadTask = storageRef.put(file);\n        uploadTask.on('state_changed',\n            function(snapshot) { },\n            function error(err) {\n                reject(err);\n            },\n            function complete() {\n                uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n                    resolve(downloadURL);\n                })\n            }\n        )\n    })\n}","export const SIGNIN_SUCCESS = 'SIGNIN_SUCCESS';\nexport const SIGNIN_FAILURE = 'SIGNIN_FAILURE';\n\nexport const AUTH_PROGRESS = 'AUTH_PROGRESS';\n\nexport const SIGN_OUT_SUCCESS = 'SIGN_OUT_SUCCESS';\nexport const SIGN_OUT_FAILURE = 'SIGN_OUT_FAILURE';\n\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\n\nexport const UPDATE_FAILURE = 'UPDATE_FAILURE';\nexport const UPDATE_SUCCESS = 'UPDATE_SUCCESS';","import React, { Component } from \"react\";\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from \"shards-react\";\n\nimport routes from \"../../routes\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../redux/auth/auth.actions\";\n\nclass MainNavbar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            collapseOpen: false\n        };\n    }\n\n    toggleNavbar = () =>  {\n        this.setState({\n            collapseOpen: !this.state.collapseOpen\n        });\n    };\n\n    handleLogout = () => {\n        this.props.signOut();\n    };\n\n    render() {\n        const { isLoggedIn } = this.props;\n        const headerLinks = routes.map((item, idx) => {\n            if (!(item.hideOnLogin && isLoggedIn)) {\n                //Hide certain routes for loggedIn users\n                return (\n                    <NavItem key={idx}>\n                        <NavLink href={item.path}>\n                            {item.alias}\n                        </NavLink>\n                    </NavItem>\n                )\n            }\n            return null;\n        });\n\n        return (\n            <Navbar type=\"dark\" theme=\"primary\" expand=\"md\">\n                <NavbarBrand href=\"/\"> JetCake </NavbarBrand>\n\n                <NavbarToggler onClick={this.toggleNavbar} />\n\n                <Collapse open={this.state.collapseOpen} navbar>\n                    <Nav navbar>\n                        { headerLinks }\n\n                        { isLoggedIn ? (<NavLink onClick={this.handleLogout}> Logout </NavLink>) : null }\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggedIn: !!state.firebase.auth.uid\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainNavbar);","import React from \"react\";\nimport { Container, Row } from \"shards-react\";\n\nconst Footer = () => (\n  <footer className=\"main-footer p-2 px-3 bg-white border-top\">\n    <Container>\n      <Row>\n        <span className=\"copyright ml-auto mr-auto\">\n          Copyright © {new Date().getFullYear()} Jetcake\n        </span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\n\nconst HeroImage = () => {\n    return(\n        <div style={style}>\n            <img\n                src={require(\"../../images/hero-image.jpg\")}\n              style={style}\n              alt=\"Hero Background\"\n            />\n            <div style={style.content}>\n                <h1>Welcome to Jetcake Page</h1>\n            </div>\n        </div>\n    )\n};\n\nconst style = {\n    'position': 'relative',\n    'top': 0,\n    'left': 0,\n    'width': '100%',\n    'minWidth': '100%',\n    'marginBottom': '40px',\n    'maxHeight': '550px',\n    content: {\n        'position': 'absolute',\n        'top': 50,\n        'margin': 'auto',\n        'textAlign': 'center',\n        'left': 0,\n        'right': 0,\n        'marginTop': -9\n    }\n};\n\nexport default HeroImage;\n","import React, { Fragment } from \"react\";\nimport { Alert, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/common/MainNavbar\";\nimport Footer from \"../components/common/Footer\";\nimport Hero from \"../components/common/HeroImage\";\nimport { connect } from \"react-redux\";\n\nexport const DefaultLayout = ({ children, errorMessage }) => (\n    <Fragment>\n        <MainNavbar />\n\n        <Hero number={100} />\n\n        { errorMessage ? (<Col lg={{ size: 8, offset: 2 }}><Alert theme=\"danger\">{errorMessage}</Alert></Col>) : null }\n\n        {children}\n\n        <Footer />\n    </Fragment>\n);\n\nconst mapStateToProps = (state) => {\n    return {\n        errorMessage: state.auth.errorMessage,\n    }\n};\n\nexport default connect(mapStateToProps)(DefaultLayout)\n","import React from \"react\";\nimport { Col, Container, Row } from \"shards-react\";\n\nconst HomePage = () => (\n  <Container fluid className=\"px-4 pb-4\">\n      <Row>\n          <Col>\n              <h2>Lorem Ipsum</h2>\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n                  dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n                  ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n                  fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n                  sunt in culpa qui officia deserunt mollit anim id est laborum.\n              </p>\n          </Col>\n          <Col>\n              <h2>Lorem Ipsum</h2>\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n              dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n              ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n              fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\n            </p>\n          </Col>\n      </Row>\n  </Container>\n);\n\nexport default HomePage;\n","import React from \"react\";\nimport { Button } from \"shards-react\";\n\nconst SpinnerButton = () => (\n    <div className=\"loader center\">\n        <Button outline disabled pill theme=\"info\" style={{float: 'right'}}>\n            <i className=\"fa fa-spinner fa-spin\" />\n        </Button>\n    </div>\n);\n\nexport default SpinnerButton;","import React, { Component, Fragment } from \"react\";\nimport { Alert, Button, Card, CardHeader, Col, Form, FormInput, ListGroup, ListGroupItem, Row } from \"shards-react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect, isEmpty } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport { updateUser } from \"../../redux/auth/auth.actions\";\nimport SpinnerButton from \"./SpinnerButton\";\n\nclass UserProfileDetails extends Component {\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.updateUser(this.state);\n  };\n\n  handleChange = (e) => {\n    const { id, value } = e.target;\n    this.setState({ [id]: value });\n  };\n\n  handleFileChange = (e) => {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n      this.setState({ image });\n    }\n  };\n\n  componentWillReceiveProps(nextProps, prevState) {\n    this.setState({ ...nextProps.user })\n  }\n\n  render() {\n    const { user, auth, isLoading, successMessage } = this.props;\n\n    if (! auth.uid) return <Redirect to='/login' />;\n\n    if(isEmpty(user))\n      return <SpinnerButton />;\n\n    return(\n        <Fragment>\n          <Card small className=\"mb-4\">\n            {  successMessage ? (<Alert theme=\"success\">{successMessage}</Alert>) : null }\n            <CardHeader className=\"border-bottom text-center\">\n              <div className=\"mb-3 mx-auto\">\n                <img style={{ maxHeight: \"300px\", maxWidth: \"100%\" }} src={user.imageUrl}  alt=\"User profile image\" />\n              </div>\n            </CardHeader>\n            <ListGroup flush>\n              <ListGroupItem className=\"p-3\">\n                <Row>\n                  <Col>\n                    <Form onSubmit={this.handleSubmit}>\n                      <Row form>\n                        <Col md=\"6\" className=\"form-group\">\n                          <label htmlFor=\"address\">Address</label>\n                          <FormInput id=\"address\" placeholder=\"City of Manchester\" defaultValue={user.address}\n                             onChange={this.handleChange} />\n                        </Col>\n                        <Col md=\"6\" className=\"form-group\">\n                          <label htmlFor=\"phoneNumber\">Phone Number</label>\n                          <FormInput type=\"tel\" id=\"phoneNumber\" placeholder=\"+2348175851897\" defaultValue={user.phoneNumber}\n                             onChange={this.handleChange} />\n                        </Col>\n                      </Row>\n                      <Row form>\n                        <Col md=\"6\" className=\"form-group\">\n                          <label htmlFor=\"dateOfBirth\">Date of Birth</label>\n                          <FormInput type=\"date\" id=\"dateOfBirth\" defaultValue={user.dateOfBirth} onChange={this.handleChange}\n                           />\n                        </Col>\n                        <Col md=\"6\" className=\"form-group\">\n                          <label htmlFor=\"question1\"> Security Question 1 : What is your favourite sports ? </label>\n                          <FormInput id=\"question1\" defaultValue={user.question1 } onChange={this.handleChange} />\n                        </Col>\n                      </Row>\n                      <Row form>\n                        <Col md=\"6\" className=\"form-group\">\n                          <label htmlFor=\"question2\"> Security Question 2 : What was your childhood nickname ? </label>\n                          <FormInput id=\"question2\" defaultValue={user.question2 } onChange={this.handleChange} />\n                        </Col>\n                        <Col md=\"6\" className=\"form-group\">\n                          <label htmlFor=\"question3\">  Security Question 3 : What city were you born ? </label>\n                          <FormInput id=\"question3\" defaultValue={user.question3 } onChange={this.handleChange} />\n                        </Col>\n                      </Row>\n                      <Row form>\n                        <Col md=\"6\" className=\"form-group\">\n                          <label htmlFor=\"photo\">Image</label>\n                          <FormInput type=\"file\" id=\"photo\" inputprops={{accept: 'image/*'}} onChange={this.handleFileChange} />\n                        </Col>\n                      </Row>\n                      { isLoading\n                          ? (<SpinnerButton />)\n                          : (<Button pill theme=\"info\" style={{ float: 'right'}}>Update Profile </Button>)\n                      }\n                    </Form>\n                  </Col>\n                </Row>\n              </ListGroupItem>\n            </ListGroup>\n          </Card>\n        </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const auth = state.firebase.auth;\n  const users = state.firestore.data.users;\n  const user = users ? users[auth.uid] : null;\n  return {\n    auth,\n    user,\n    authError: state.auth.authError,\n    isLoading: state.auth.isLoading,\n    successMessage: state.auth.successMessage\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateUser: (user) => dispatch(updateUser(user))\n  }\n};\n\nexport default compose(\n    connect(mapStateToProps,mapDispatchToProps),\n    firestoreConnect(props => [{ collection: 'users', doc: props.auth.uid }]),\n)(UserProfileDetails);","import React from \"react\";\nimport { Col, Container, Row } from \"shards-react\";\nimport UserProfileDetails from \"./common/UserProfileDetails\";\n\nconst ProfilePage = () => (\n    <Container fluid className=\"main-content-container px-4\">\n        <Row>\n            <Col lg={{ size: 8, offset: 2 }}>\n                <UserProfileDetails />\n            </Col>\n        </Row>\n    </Container>\n);\n\nexport default ProfilePage;\n","import React, { Component } from \"react\";\nimport { Alert, Button, Col, Container, Form, FormGroup, FormInput, Row } from \"shards-react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../redux/auth/auth.actions\";\nimport { Redirect } from \"react-router-dom\";\nimport SpinnerButton from \"./common/SpinnerButton\";\n\nclass LoginPage extends Component {\n\n   constructor(props) {\n       super(props);\n       this.state = {\n           email: '',\n           password: ''\n       }\n   }\n\n    handleChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    };\n\n    render() {\n        const { authError, auth, isLoading } = this.props;\n        if (auth.uid) return <Redirect to='/' />;\n\n        return(\n            <Container fluid className=\"px-4 pb-4\">\n                <Row>\n                    <Col lg={{size: 6, offset: 3}} >\n                        { authError ? (<Alert theme=\"danger\">{authError}</Alert>) : null }\n\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup>\n                                <label htmlFor=\"email\">Email</label>\n                                <FormInput type=\"email\" id=\"email\" placeholder=\"Email\" value={this.state.email}\n                                    onChange={this.handleChange} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"password\">Password</label>\n                                <FormInput type=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange} />\n                            </FormGroup>\n                            <FormGroup className=\"mr-0\">\n                                { isLoading\n                                    ? (<SpinnerButton />)\n                                    : (<Button pill theme=\"info\" style={{float: 'right'}}> Login </Button> )\n                                }\n                            </FormGroup>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth,\n        isLoading: state.auth.isLoading\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (credentials) => dispatch(signIn(credentials))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)","import React, { Component } from \"react\";\nimport { Alert, Button, Col, Container, Form, FormGroup, FormInput, Row } from \"shards-react\";\n\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../redux/auth/auth.actions\";\nimport { connect } from \"react-redux\";\nimport SpinnerButton from \"./common/SpinnerButton\";\n\nclass RegisterPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n            phoneNumber: '',\n            address: '',\n            dateOfBirth: '',\n            question1: '',\n            question2: '',\n            question3: '',\n            image: ''\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    };\n\n    handleChange = (e) => {\n        const { id, value } = e.target;\n        this.setState({ [id]: value });\n    };\n\n    handleFileChange = (e) => {\n        if (e.target.files[0]) {\n            const image = e.target.files[0];\n            this.setState({ image });\n        }\n    };\n\n    render() {\n        const { auth, authError, isLoading } = this.props;\n        if (auth.uid) return <Redirect to='/' />;\n\n        const { email, password, phoneNumber, address, dateOfBirth, question1, question2, question3 } = this.state;\n\n        return(\n            <Container fluid className=\"px-4 pb-4\">\n                <Row>\n                    <Col lg={{ size: 8, offset: 2 }}>\n                        { authError ? (<Alert theme=\"danger\">{authError}</Alert>) : null }\n\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup>\n                                <label htmlFor=\"email\">Email</label>\n                                <FormInput type=\"email\" id=\"email\" placeholder=\"me@example.com\" value={email} required\n                                   onChange={this.handleChange} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"password\">Password</label>\n                                <FormInput type=\"password\" id=\"password\" value={password} onChange={this.handleChange}\n                                   required/>\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"phoneNumber\">Phone Number</label>\n                                <FormInput type=\"tel\" id=\"phoneNumber\" placeholder=\"+2348175851897\" name=\"phoneNumber\"\n                                   value={phoneNumber} onChange={this.handleChange} required />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"address\">Address</label>\n                                <FormInput type=\"text\" id=\"address\" placeholder=\"United States of America\" value={address}\n                                   onChange={this.handleChange} required />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"dateOfBirth\">Date of Birth</label>\n                                <FormInput type=\"date\" id=\"dateOfBirth\" value={dateOfBirth} onChange={this.handleChange}\n                                   required />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"photo\">Photo</label>\n                                <FormInput type=\"file\" id=\"photo\" inputprops={{accept: 'image/*'}} onChange={this.handleFileChange}\n                                   required />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"question1\">\n                                    Security Question 1 : What is your favourite sports ?\n                                </label>\n                                <FormInput type=\"text\" id=\"question1\" value={question1} onChange={this.handleChange}\n                                   required />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"question2\">\n                                    Security Question 2 : What was your childhood nickname ?\n                                </label>\n                                <FormInput type=\"text\" id=\"question2\" value={question2} onChange={this.handleChange}\n                                   required />\n                            </FormGroup>\n                            <FormGroup>\n                                <label htmlFor=\"question3\">\n                                    Security Question 3 : What city were you born ?\n                                </label>\n                                <FormInput type=\"text\" id=\"question3\" value={question3} onChange={this.handleChange}\n                                   required />\n                            </FormGroup>\n                            <FormGroup className=\"mr-0\">\n                                { isLoading\n                                    ? (<SpinnerButton />)\n                                    : (<Button pill theme=\"info\" style={{float: 'right'}}> Register </Button> )\n                                }\n                            </FormGroup>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth,\n        isLoading: state.auth.isLoading\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (credentials) => dispatch(signUp(credentials))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage)\n","// Layout Types\nimport DefaultLayout from \"./layouts/Default\";\n// Route Views\nimport HomePage from \"./components/HomePage\";\nimport ProfilePage from \"./components/ProfilePage\";\nimport LoginPage from \"./components/LoginPage\";\nimport RegisterPage from \"./components/RegisterPage\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: HomePage,\n    alias : \"Home\"\n  },\n  {\n    path: \"/profile\",\n    layout: DefaultLayout,\n    component: ProfilePage,\n    alias : \"Profile\"\n  },\n  {\n    path: \"/login\",\n    layout: DefaultLayout,\n    component: LoginPage,\n    alias : \"Login\",\n    hideOnLogin: true\n  },\n  {\n    path: \"/register\",\n    layout: DefaultLayout,\n    component: RegisterPage,\n    alias : \"Sign Up\",\n    hideOnLogin: true\n  }\n\n];\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\n\nexport default () => (\n  <Router>\n    <div>\n      {routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={ props => {\n              return (\n                <route.layout {...props}>\n                  <route.component {...props} />\n                </route.layout>\n              );\n            }}\n          />\n        );\n      })}\n    </div>\n  </Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    AUTH_PROGRESS,\n    SIGN_OUT_FAILURE,\n    SIGN_OUT_SUCCESS,\n    SIGNIN_FAILURE,\n    SIGNIN_SUCCESS,\n    SIGNUP_FAILURE,\n    SIGNUP_SUCCESS,\n    UPDATE_FAILURE,\n    UPDATE_SUCCESS\n} from \"./auth.types\";\n\nconst initState = {\n    authError: null,\n    isLoading: false,\n    errorMessage: null,\n    successMessage: null,\n};\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type) {\n        case AUTH_PROGRESS:\n            return { ...state, authError: null, isLoading: true };\n        case SIGNIN_SUCCESS:\n            return { ...state, authError: null, isLoading: false };\n        case SIGNIN_FAILURE:\n            return { ...state, authError: action.message, isLoading: false };\n        case SIGN_OUT_SUCCESS:\n            return { ...state, errorMessage: null };\n        case SIGN_OUT_FAILURE:\n            return { ...state, errorMessage: action.message };\n        case SIGNUP_SUCCESS:\n            return { ...state, authError: null, isLoading: false };\n        case SIGNUP_FAILURE:\n            return { ...state, authError: action.message, isLoading: false };\n        case UPDATE_SUCCESS:\n            return { ...state, authError: null, isLoading: false, successMessage: action.message };\n        case UPDATE_FAILURE:\n            return { ...state, authError: action.message, isLoading: false };\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;","import { combineReducers } from 'redux'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nimport authReducer from \"./auth/auth.reducer\";\nimport { firestoreReducer } from \"redux-firestore\";\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, compose, createStore } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport { getFirebase, reactReduxFirebase } from \"react-redux-firebase\";\nimport { getFirestore, reduxFirestore } from \"redux-firestore\";\n\nimport fbConfig from \"../config/firebase\";\n\nimport rootReducer from './rootReducer'\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reactReduxFirebase(fbConfig, { userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true }),\n        reduxFirestore(fbConfig)\n    )\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}